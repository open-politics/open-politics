services:

  db:
    restart: "no"
    ports:
      - "5432:5432"

  # adminer:
  #   restart: "no"
  #   ports:
  #     - "8080:8080"

  backend:
    restart: "no"
    ports:
      - "8000:8000"
    volumes:
      - ./backend/:/app
    build:
      context: ./backend
      args:
        INSTALL_DEV: ${INSTALL_DEV-true}
    # command: sleep infinity  # Infinite loop to keep container alive doing nothing
    command: /start-reload.sh

  frontend:
    restart: "no"
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
      args:
        - NODE_ENV=development
        - NEXT_PUBLIC_API_URL=http://localhost:8080
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-public
      - traefik.constraint-label=traefik-public
      - traefik.http.services.${STACK_NAME?Variable not set}-frontend.loadbalancer.server.port=3000
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.entrypoints=http
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.rule=Host(`${DOMAIN?Variable not set}`, `www.${DOMAIN?Variable not set}`)
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.entrypoints=https
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls=true
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.tls.certresolver=le
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-https.middlewares=${STACK_NAME?Variable not set}-www-redirect
      - traefik.http.routers.${STACK_NAME?Variable not set}-frontend-http.middlewares=https-redirect,${STACK_NAME?Variable not set}-www-redirect

networks:
  traefik-public:
    # For local dev, don't expect an external Traefik network
    external: true
