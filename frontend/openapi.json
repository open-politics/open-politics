{
  "openapi": "3.1.0",
  "info": {
  "title": "Open Politics Project",
  "version": "0.1.0"
  },
  "paths": {
  "/api/v1/login/access-token": {
  "post": {
  "tags": [
  "login"
  ],
  "summary": "Login Access Token",
  "description": "OAuth2 compatible token login, get an access token for future requests",
  "operationId": "login-login_access_token",
  "requestBody": {
  "content": {
  "application/x-www-form-urlencoded": {
  "schema": {
  "$ref": "#/components/schemas/Body_login-login_access_token"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Token"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/login/test-token": {
  "post": {
  "tags": [
  "login"
  ],
  "summary": "Test Token",
  "description": "Test access token",
  "operationId": "login-test_token",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  }
  },
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ]
  }
  },
  "/api/v1/password-recovery/{email}": {
  "post": {
  "tags": [
  "login"
  ],
  "summary": "Recover Password",
  "description": "Password Recovery",
  "operationId": "login-recover_password",
  "parameters": [
  {
  "name": "email",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Email"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/reset-password/": {
  "post": {
  "tags": [
  "login"
  ],
  "summary": "Reset Password",
  "description": "Reset password",
  "operationId": "login-reset_password",
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/NewPassword"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/password-recovery-html-content/{email}": {
  "post": {
  "tags": [
  "login"
  ],
  "summary": "Recover Password Html Content",
  "description": "HTML Content for Password Recovery",
  "operationId": "login-recover_password_html_content",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "email",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Email"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "text/html": {
  "schema": {
  "type": "string"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/users/": {
  "get": {
  "tags": [
  "users"
  ],
  "summary": "Read Users",
  "description": "Retrieve users.",
  "operationId": "users-read_users",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "skip",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 0,
  "title": "Skip"
  }
  },
  {
  "name": "limit",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 100,
  "title": "Limit"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UsersOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "post": {
  "tags": [
  "users"
  ],
  "summary": "Create User",
  "description": "Create new user.",
  "operationId": "users-create_user",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserCreate"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/users/me": {
  "get": {
  "tags": [
  "users"
  ],
  "summary": "Read User Me",
  "description": "Get current user.",
  "operationId": "users-read_user_me",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  }
  },
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ]
  },
  "patch": {
  "tags": [
  "users"
  ],
  "summary": "Update User Me",
  "description": "Update own user.",
  "operationId": "users-update_user_me",
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserUpdateMe"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  },
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ]
  }
  },
  "/api/v1/users/me/password": {
  "patch": {
  "tags": [
  "users"
  ],
  "summary": "Update Password Me",
  "description": "Update own password.",
  "operationId": "users-update_password_me",
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UpdatePassword"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  },
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ]
  }
  },
  "/api/v1/users/open": {
  "post": {
  "tags": [
  "users"
  ],
  "summary": "Create User Open",
  "description": "Create new user without the need to be logged in.",
  "operationId": "users-create_user_open",
  "requestBody": {
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserCreateOpen"
  }
  }
  },
  "required": true
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/users/{user_id}": {
  "get": {
  "tags": [
  "users"
  ],
  "summary": "Read User By Id",
  "description": "Get a specific user by id.",
  "operationId": "users-read_user_by_id",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "user_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "User Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "patch": {
  "tags": [
  "users"
  ],
  "summary": "Update User",
  "description": "Update a user.",
  "operationId": "users-update_user",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "user_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "User Id"
  }
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserUpdate"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/UserOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "delete": {
  "tags": [
  "users"
  ],
  "summary": "Delete User",
  "description": "Delete a user.",
  "operationId": "users-delete_user",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "user_id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "User Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/utils/test-email/": {
  "post": {
  "tags": [
  "utils"
  ],
  "summary": "Test Email",
  "description": "Test emails.",
  "operationId": "utils-test_email",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "email_to",
  "in": "query",
  "required": true,
  "schema": {
  "type": "string",
  "format": "email",
  "title": "Email To"
  }
  }
  ],
  "responses": {
  "201": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/utils/healthz": {
  "get": {
  "tags": [
  "utils"
  ],
  "summary": "Healthz",
  "operationId": "utils-healthz",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/utils/healthz/readiness": {
  "get": {
  "tags": [
  "utils"
  ],
  "summary": "Readyz",
  "operationId": "utils-readyz",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/utils/healthz/liveness": {
  "get": {
  "tags": [
  "utils"
  ],
  "summary": "Liveness",
  "operationId": "utils-liveness",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/items/": {
  "get": {
  "tags": [
  "items"
  ],
  "summary": "Read Items",
  "description": "Retrieve items.",
  "operationId": "items-read_items",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "skip",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 0,
  "title": "Skip"
  }
  },
  {
  "name": "limit",
  "in": "query",
  "required": false,
  "schema": {
  "type": "integer",
  "default": 100,
  "title": "Limit"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemsOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "post": {
  "tags": [
  "items"
  ],
  "summary": "Create Item",
  "description": "Create new item.",
  "operationId": "items-create_item",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemCreate"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/items/{id}": {
  "get": {
  "tags": [
  "items"
  ],
  "summary": "Read Item",
  "description": "Get item by ID.",
  "operationId": "items-read_item",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "put": {
  "tags": [
  "items"
  ],
  "summary": "Update Item",
  "description": "Update an item.",
  "operationId": "items-update_item",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "Id"
  }
  }
  ],
  "requestBody": {
  "required": true,
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemUpdate"
  }
  }
  }
  },
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/ItemOut"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  },
  "delete": {
  "tags": [
  "items"
  ],
  "summary": "Delete Item",
  "description": "Delete an item.",
  "operationId": "items-delete_item",
  "security": [
  {
  "OAuth2PasswordBearer": []
  }
  ],
  "parameters": [
  {
  "name": "id",
  "in": "path",
  "required": true,
  "schema": {
  "type": "integer",
  "title": "Id"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/Message"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/healthz/readiness": {
  "get": {
  "tags": [
  "app"
  ],
  "summary": "Readyz",
  "operationId": "app-readyz",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/healthz/liveness": {
  "get": {
  "tags": [
  "app"
  ],
  "summary": "Liveness",
  "operationId": "app-liveness",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/healthz/healthz": {
  "get": {
  "tags": [
  "app"
  ],
  "summary": "Healthz",
  "operationId": "app-healthz",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/location_from_query/": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Location From Query",
  "operationId": "locations-location_from_query",
  "parameters": [
  {
  "name": "query",
  "in": "query",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Query"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/geojson/": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Geojson View",
  "operationId": "locations-geojson_view",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/leaders/{state}": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Get Leader Info",
  "operationId": "locations-get_leader_info",
  "parameters": [
  {
  "name": "state",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "State"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/legislation/{state}": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Get Legislation Data",
  "operationId": "locations-get_legislation_data",
  "parameters": [
  {
  "name": "state",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "State"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/econ_data/{state}": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Get Econ Data",
  "operationId": "locations-get_econ_data",
  "parameters": [
  {
  "name": "state",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "State"
  }
  },
  {
  "name": "indicators",
  "in": "query",
  "required": false,
  "schema": {
  "type": "array",
  "items": {
  "type": "string"
  },
  "default": [
  "GDP",
  "GDP_GROWTH"
  ],
  "title": "Indicators"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/update_leaders/": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Update Leaders",
  "operationId": "locations-update_leaders",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/locations/get_articles": {
  "get": {
  "tags": [
  "locations"
  ],
  "summary": "Get Tavily Data",
  "operationId": "countries-get_tavily_data",
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  }
  }
  }
  },
  "/api/v1/search/get_articles": {
  "get": {
  "tags": [
  "search"
  ],
  "summary": "Get Tavily Data",
  "operationId": "search-get_tavily_data",
  "parameters": [
  {
  "name": "query",
  "in": "query",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Query"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {}
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  },
  "/api/v1/search/report/{query}": {
  "get": {
  "tags": [
  "search"
  ],
  "summary": "Get Report",
  "operationId": "search-get_report",
  "parameters": [
  {
  "name": "query",
  "in": "path",
  "required": true,
  "schema": {
  "type": "string",
  "title": "Query"
  }
  }
  ],
  "responses": {
  "200": {
  "description": "Successful Response",
  "content": {
  "application/json": {
  "schema": {
  "type": "object",
  "title": "Response Search-Get Report"
  }
  }
  }
  },
  "422": {
  "description": "Validation Error",
  "content": {
  "application/json": {
  "schema": {
  "$ref": "#/components/schemas/HTTPValidationError"
  }
  }
  }
  }
  }
  }
  }
  },
  "components": {
  "schemas": {
  "Body_login-login_access_token": {
  "properties": {
  "grant_type": {
  "anyOf": [
  {
  "type": "string",
  "pattern": "password"
  },
  {
  "type": "null"
  }
  ],
  "title": "Grant Type"
  },
  "username": {
  "type": "string",
  "title": "Username"
  },
  "password": {
  "type": "string",
  "title": "Password"
  },
  "scope": {
  "type": "string",
  "title": "Scope",
  "default": ""
  },
  "client_id": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Client Id"
  },
  "client_secret": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Client Secret"
  }
  },
  "type": "object",
  "required": [
  "username",
  "password"
  ],
  "title": "Body_login-login_access_token"
  },
  "HTTPValidationError": {
  "properties": {
  "detail": {
  "items": {
  "$ref": "#/components/schemas/ValidationError"
  },
  "type": "array",
  "title": "Detail"
  }
  },
  "type": "object",
  "title": "HTTPValidationError"
  },
  "ItemCreate": {
  "properties": {
  "title": {
  "type": "string",
  "title": "Title"
  },
  "description": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Description"
  }
  },
  "type": "object",
  "required": [
  "title"
  ],
  "title": "ItemCreate"
  },
  "ItemOut": {
  "properties": {
  "title": {
  "type": "string",
  "title": "Title"
  },
  "description": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Description"
  },
  "id": {
  "type": "integer",
  "title": "Id"
  },
  "owner_id": {
  "type": "integer",
  "title": "Owner Id"
  }
  },
  "type": "object",
  "required": [
  "title",
  "id",
  "owner_id"
  ],
  "title": "ItemOut"
  },
  "ItemUpdate": {
  "properties": {
  "title": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Title"
  },
  "description": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Description"
  }
  },
  "type": "object",
  "title": "ItemUpdate"
  },
  "ItemsOut": {
  "properties": {
  "data": {
  "items": {
  "$ref": "#/components/schemas/ItemOut"
  },
  "type": "array",
  "title": "Data"
  },
  "count": {
  "type": "integer",
  "title": "Count"
  }
  },
  "type": "object",
  "required": [
  "data",
  "count"
  ],
  "title": "ItemsOut"
  },
  "Message": {
  "properties": {
  "message": {
  "type": "string",
  "title": "Message"
  }
  },
  "type": "object",
  "required": [
  "message"
  ],
  "title": "Message"
  },
  "NewPassword": {
  "properties": {
  "token": {
  "type": "string",
  "title": "Token"
  },
  "new_password": {
  "type": "string",
  "title": "New Password"
  }
  },
  "type": "object",
  "required": [
  "token",
  "new_password"
  ],
  "title": "NewPassword"
  },
  "Token": {
  "properties": {
  "access_token": {
  "type": "string",
  "title": "Access Token"
  },
  "token_type": {
  "type": "string",
  "title": "Token Type",
  "default": "bearer"
  }
  },
  "type": "object",
  "required": [
  "access_token"
  ],
  "title": "Token"
  },
  "UpdatePassword": {
  "properties": {
  "current_password": {
  "type": "string",
  "title": "Current Password"
  },
  "new_password": {
  "type": "string",
  "title": "New Password"
  }
  },
  "type": "object",
  "required": [
  "current_password",
  "new_password"
  ],
  "title": "UpdatePassword"
  },
  "UserCreate": {
  "properties": {
  "email": {
  "type": "string",
  "title": "Email"
  },
  "is_active": {
  "type": "boolean",
  "title": "Is Active",
  "default": true
  },
  "is_superuser": {
  "type": "boolean",
  "title": "Is Superuser",
  "default": false
  },
  "full_name": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Full Name"
  },
  "password": {
  "type": "string",
  "title": "Password"
  }
  },
  "type": "object",
  "required": [
  "email",
  "password"
  ],
  "title": "UserCreate"
  },
  "UserCreateOpen": {
  "properties": {
  "email": {
  "type": "string",
  "title": "Email"
  },
  "password": {
  "type": "string",
  "title": "Password"
  },
  "full_name": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Full Name"
  }
  },
  "type": "object",
  "required": [
  "email",
  "password"
  ],
  "title": "UserCreateOpen"
  },
  "UserOut": {
  "properties": {
  "email": {
  "type": "string",
  "title": "Email"
  },
  "is_active": {
  "type": "boolean",
  "title": "Is Active",
  "default": true
  },
  "is_superuser": {
  "type": "boolean",
  "title": "Is Superuser",
  "default": false
  },
  "full_name": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Full Name"
  },
  "id": {
  "type": "integer",
  "title": "Id"
  }
  },
  "type": "object",
  "required": [
  "email",
  "id"
  ],
  "title": "UserOut"
  },
  "UserUpdate": {
  "properties": {
  "email": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Email"
  },
  "is_active": {
  "type": "boolean",
  "title": "Is Active",
  "default": true
  },
  "is_superuser": {
  "type": "boolean",
  "title": "Is Superuser",
  "default": false
  },
  "full_name": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Full Name"
  },
  "password": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Password"
  }
  },
  "type": "object",
  "title": "UserUpdate"
  },
  "UserUpdateMe": {
  "properties": {
  "full_name": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Full Name"
  },
  "email": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "null"
  }
  ],
  "title": "Email"
  }
  },
  "type": "object",
  "title": "UserUpdateMe"
  },
  "UsersOut": {
  "properties": {
  "data": {
  "items": {
  "$ref": "#/components/schemas/UserOut"
  },
  "type": "array",
  "title": "Data"
  },
  "count": {
  "type": "integer",
  "title": "Count"
  }
  },
  "type": "object",
  "required": [
  "data",
  "count"
  ],
  "title": "UsersOut"
  },
  "ValidationError": {
  "properties": {
  "loc": {
  "items": {
  "anyOf": [
  {
  "type": "string"
  },
  {
  "type": "integer"
  }
  ]
  },
  "type": "array",
  "title": "Location"
  },
  "msg": {
  "type": "string",
  "title": "Message"
  },
  "type": {
  "type": "string",
  "title": "Error Type"
  }
  },
  "type": "object",
  "required": [
  "loc",
  "msg",
  "type"
  ],
  "title": "ValidationError"
  }
  },
  "securitySchemes": {
  "OAuth2PasswordBearer": {
  "type": "oauth2",
  "flows": {
  "password": {
  "scopes": {},
  "tokenUrl": "/api/v1/login/access-token"
  }
  }
  }
  }
  }
  }