{"openapi": "3.1.0", "info": {"title": "Open Politics Project", "version": "0.1.0"}, "paths": {"/api/v1/healthz/readiness": {"get": {"tags": ["app"], "summary": "Readyz", "operationId": "app-readyz", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/healthz/liveness": {"get": {"tags": ["app"], "summary": "Liveness", "operationId": "app-liveness", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/healthz/healthz": {"get": {"tags": ["app"], "summary": "Healthz", "operationId": "app-healthz", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/locations/{location}/contents": {"get": {"tags": ["locations"], "summary": "Get Location Contents", "description": "Get articles related to a location with basic pagination.", "operationId": "locations-get_location_contents", "parameters": [{"name": "location", "in": "path", "required": true, "schema": {"type": "string", "title": "Location"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/{location}/entities/contents": {"get": {"tags": ["locations"], "summary": "Get Location Entities Contents", "description": "Get articles related to a location with basic pagination.", "operationId": "locations-get_location_entities_contents", "parameters": [{"name": "location", "in": "path", "required": true, "schema": {"type": "string", "title": "Location"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 20, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/location_from_query": {"get": {"tags": ["locations"], "summary": "Location From Query", "operationId": "locations-location_from_query", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "title": "Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/geojson/": {"get": {"tags": ["locations"], "summary": "Geojson View", "operationId": "locations-geojson_view", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/locations/geojson_events": {"get": {"tags": ["locations"], "summary": "Geojson Events View", "operationId": "locations-geojson_events_view", "parameters": [{"name": "event_type", "in": "query", "required": true, "schema": {"type": "string", "title": "Event Type"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/dashboard": {"get": {"tags": ["locations"], "summary": "Dashboard View", "operationId": "locations-dashboard_view", "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}}}}, "/api/v1/locations/{location_name}/entities": {"get": {"tags": ["locations"], "summary": "Get Location Entities", "operationId": "locations-get_location_entities", "parameters": [{"name": "location_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Location Name"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 50, "title": "Limit"}}, {"name": "min_relevance", "in": "query", "required": false, "schema": {"type": "number", "default": 0.0, "title": "Min Relevance"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/leaders/{state}": {"get": {"tags": ["locations"], "summary": "Get Leader Info", "operationId": "locations-get_leader_info", "parameters": [{"name": "state", "in": "path", "required": true, "schema": {"type": "string", "title": "State"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/legislation/{state}": {"get": {"tags": ["locations"], "summary": "Get Legislation Data", "operationId": "locations-get_legislation_data", "parameters": [{"name": "state", "in": "path", "required": true, "schema": {"type": "string", "title": "State"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/econ_data/{state}": {"get": {"tags": ["locations"], "summary": "Get Econ Data", "operationId": "locations-get_econ_data", "parameters": [{"name": "state", "in": "path", "required": true, "schema": {"type": "string", "title": "State"}}, {"name": "indicators", "in": "query", "required": false, "schema": {"type": "array", "items": {"type": "string"}, "default": ["GDP", "GDP_GROWTH"], "title": "Indicators"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/update_leaders/": {"get": {"tags": ["locations"], "summary": "Update Leaders", "operationId": "locations-update_leaders", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/locations/get_articles": {"get": {"tags": ["locations"], "summary": "Get Tavily Data", "operationId": "locations-get_tavily_data", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/locations/get_coordinates": {"get": {"tags": ["locations"], "summary": "Get Coordinates", "description": "Fetches the coordinates, bounding box, and location type for a given location.", "operationId": "locations-get_coordinates", "parameters": [{"name": "location", "in": "query", "required": true, "schema": {"type": "string", "title": "Location"}}, {"name": "language", "in": "query", "required": false, "schema": {"type": "string", "default": "en", "title": "Language"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/get_geojson_for_article_ids": {"post": {"tags": ["locations"], "summary": "Get Geojson For Article Ids", "operationId": "locations-get_geojson_for_article_ids", "requestBody": {"content": {"application/json": {"schema": {"items": {"type": "string"}, "type": "array", "title": "Article Ids"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/metadata/{location}": {"get": {"tags": ["locations"], "summary": "Get Location Metadata", "description": "Get metadata about a location including supported features", "operationId": "locations-get_location_metadata", "parameters": [{"name": "location", "in": "path", "required": true, "schema": {"type": "string", "title": "Location"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/locations/channel/{service_name}/{path}": {"get": {"tags": ["locations"], "summary": "Channel Route", "description": "A channel route that forwards requests to a specified service.", "operationId": "locations-channel_route", "parameters": [{"name": "service_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Service Name"}}, {"name": "path", "in": "path", "required": true, "schema": {"type": "string", "title": "Path"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Request"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/search/contents": {"get": {"tags": ["search"], "summary": "Get Contents", "operationId": "search-get_contents", "parameters": [{"name": "search_query", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Search Query"}}, {"name": "search_type", "in": "query", "required": false, "schema": {"$ref": "#/components/schemas/SearchType", "default": "semantic"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "default": 20, "title": "Limit"}}, {"name": "news_category", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "News Category"}}, {"name": "secondary_categories", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Secondary Categories"}}, {"name": "keyword", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Keyword"}}, {"name": "entities", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Entities"}}, {"name": "locations", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Locations"}}, {"name": "topics", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Topics"}}, {"name": "classification_scores", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Classification Scores"}}, {"name": "keyword_weights", "in": "query", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Keyword Weights"}}, {"name": "exclude_keywords", "in": "query", "required": false, "schema": {"anyOf": [{"type": "array", "items": {"type": "string"}}, {"type": "null"}], "title": "Exclude Keywords"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/search/most_relevant_entities": {"post": {"tags": ["search"], "summary": "Get Most Relevant Entities", "operationId": "search-get_most_relevant_entities", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/MostRelevantEntitiesRequest"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/search/search_synthesizer": {"get": {"tags": ["search"], "summary": "Search Synthesizer", "operationId": "search-search_synthesizer", "parameters": [{"name": "search_query", "in": "query", "required": true, "schema": {"type": "string", "title": "Search Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/entities/": {"get": {"tags": ["entities"], "summary": "Search Entities", "description": "Search and paginate through entities based on a query.", "operationId": "entities-search_entities", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "description": "Search query for entities", "title": "Query"}, "description": "Search query for entities"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of records to skip", "default": 0, "title": "Skip"}, "description": "Number of records to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Maximum number of records to return", "default": 50, "title": "Limit"}, "description": "Maximum number of records to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/entities/by_entity": {"get": {"tags": ["entities"], "summary": "Get Entity Details", "description": "Retrieve detailed information about a specific entity.", "operationId": "entities-get_entity_details", "parameters": [{"name": "entity", "in": "query", "required": true, "schema": {"type": "string", "description": "Entity for details", "title": "Entity"}, "description": "Entity for details"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of records to skip", "default": 0, "title": "Skip"}, "description": "Number of records to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Maximum number of records to return", "default": 50, "title": "Limit"}, "description": "Maximum number of records to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/access-token": {"post": {"tags": ["login"], "summary": "Login Access Token", "description": "OAuth2 compatible token login, get an access token for future requests", "operationId": "login-login_access_token", "requestBody": {"content": {"application/x-www-form-urlencoded": {"schema": {"$ref": "#/components/schemas/Body_login-login_access_token"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Token"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/login/test-token": {"post": {"tags": ["login"], "summary": "Test Token", "description": "Test access token", "operationId": "login-test_token", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/password-recovery/{email}": {"post": {"tags": ["login"], "summary": "Recover Password", "description": "Password Recovery", "operationId": "login-recover_password", "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/reset-password/": {"post": {"tags": ["login"], "summary": "Reset Password", "description": "Reset password", "operationId": "login-reset_password", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/NewPassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/password-recovery-html-content/{email}": {"post": {"tags": ["login"], "summary": "Recover Password Html Content", "description": "HTML Content for Password Recovery", "operationId": "login-recover_password_html_content", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email", "in": "path", "required": true, "schema": {"type": "string", "title": "Email"}}], "responses": {"200": {"description": "Successful Response", "content": {"text/html": {"schema": {"type": "string"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/": {"get": {"tags": ["users"], "summary": "Read Users", "description": "Retrieve users.", "operationId": "users-read_users", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UsersOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["users"], "summary": "Create User", "description": "Create new user.", "operationId": "users-create_user", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/me": {"get": {"tags": ["users"], "summary": "Read User Me", "description": "Get current user.", "operationId": "users-read_user_me", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}, "patch": {"tags": ["users"], "summary": "Update User Me", "description": "Update own user.", "operationId": "users-update_user_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdateMe"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/me/password": {"patch": {"tags": ["users"], "summary": "Update Password Me", "description": "Update own password.", "operationId": "users-update_password_me", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UpdatePassword"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/users/open": {"post": {"tags": ["users"], "summary": "Create User Open", "description": "Create new user without the need to be logged in.", "operationId": "users-create_user_open", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserCreateOpen"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/users/{user_id}": {"get": {"tags": ["users"], "summary": "Read User By Id", "description": "Get a specific user by id.", "operationId": "users-read_user_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["users"], "summary": "Update User", "description": "Update a user.", "operationId": "users-update_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/UserOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["users"], "summary": "Delete User", "description": "Delete a user.", "operationId": "users-delete_user", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "user_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "User Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/test-email/": {"post": {"tags": ["utils"], "summary": "Test Email", "description": "Test emails.", "operationId": "utils-test_email", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "email_to", "in": "query", "required": true, "schema": {"type": "string", "format": "email", "title": "Email To"}}], "responses": {"201": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/utils/healthz": {"get": {"tags": ["utils"], "summary": "Healthz", "operationId": "utils-healthz", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/utils/healthz/readiness": {"get": {"tags": ["utils"], "summary": "Readyz", "operationId": "utils-readyz", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/utils/healthz/liveness": {"get": {"tags": ["utils"], "summary": "Liveness", "operationId": "utils-liveness", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}}}}, "/api/v1/items/": {"get": {"tags": ["items"], "summary": "Read Items", "description": "Retrieve items.", "operationId": "items-read_items", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemsOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "post": {"tags": ["items"], "summary": "Create Item", "description": "Create new item.", "operationId": "items-create_item", "security": [{"OAuth2PasswordBearer": []}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/items/{id}": {"get": {"tags": ["items"], "summary": "Read Item", "description": "Get item by ID.", "operationId": "items-read_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "put": {"tags": ["items"], "summary": "Update Item", "description": "Update an item.", "operationId": "items-update_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ItemOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["items"], "summary": "Delete Item", "description": "Delete an item.", "operationId": "items-delete_item", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/Message"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/search_histories/create": {"post": {"tags": ["search-history"], "summary": "Create Search History", "description": "Create a new search history entry.", "operationId": "search-history-create_search_history", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/SearchHistoryCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SearchHistory"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/search_histories/read": {"get": {"tags": ["search-history"], "summary": "Read Search Histories", "description": "Retrieve search histories for the current user.", "operationId": "search-history-read_search_histories", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/SearchHistoriesOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/workspaces/create": {"post": {"tags": ["workspaces"], "summary": "Create Workspace", "description": "Create a new workspace.\nOnly accessible by superusers.", "operationId": "workspaces-create_workspace", "requestBody": {"content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspaceCreate"}}}, "required": true}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspaceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}, "security": [{"OAuth2PasswordBearer": []}]}}, "/api/v1/workspaces/read": {"get": {"tags": ["workspaces"], "summary": "Read Workspaces", "description": "Retrieve all workspaces.\nOnly accessible by superusers.", "operationId": "workspaces-read_workspaces", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspacesOut"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/workspaces/{workspace_id}": {"get": {"tags": ["workspaces"], "summary": "Read Workspace By Id", "description": "Get a specific workspace by ID.\nOnly accessible by superusers.", "operationId": "workspaces-read_workspace_by_id", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspaceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["workspaces"], "summary": "Delete Workspace", "description": "Delete a workspace.\nOnly accessible by superusers.", "operationId": "workspaces-delete_workspace", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/workspaces/update/{workspace_id}": {"patch": {"tags": ["workspaces"], "summary": "Update Workspace", "description": "Update an existing workspace.\nOnly accessible by superusers.", "operationId": "workspaces-update_workspace", "security": [{"OAuth2PasswordBearer": []}], "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspaceCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/WorkspaceRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/classification_schemes/{workspace_id}": {"post": {"tags": ["classification-schemes"], "summary": "Create Classification Scheme", "operationId": "classification-schemes-create_classification_scheme", "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClassificationSchemeCreate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClassificationSchemeRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "get": {"tags": ["classification-schemes"], "summary": "Read Classification Schemes", "operationId": "classification-schemes-read_classification_schemes", "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "default": 0, "title": "Skip"}}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "default": 100, "title": "Limit"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "array", "items": {"$ref": "#/components/schemas/ClassificationSchemeRead"}, "title": "Response Classification-Schemes-Read Classification Schemes"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v1/classification_schemes/{workspace_id}/{scheme_id}": {"get": {"tags": ["classification-schemes"], "summary": "Read Classification Scheme", "operationId": "classification-schemes-read_classification_scheme", "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}, {"name": "scheme_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Scheme Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClassificationSchemeRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "patch": {"tags": ["classification-schemes"], "summary": "Update Classification Scheme", "operationId": "classification-schemes-update_classification_scheme", "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}, {"name": "scheme_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Scheme Id"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClassificationSchemeUpdate"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ClassificationSchemeRead"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}, "delete": {"tags": ["classification-schemes"], "summary": "Delete Classification Scheme", "operationId": "classification-schemes-delete_classification_scheme", "parameters": [{"name": "workspace_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Workspace Id"}}, {"name": "scheme_id", "in": "path", "required": true, "schema": {"type": "integer", "title": "Scheme Id"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/geo/geojson_events": {"get": {"tags": ["geo"], "summary": "Geojson Events View", "operationId": "geo-geojson_events_view", "parameters": [{"name": "event_type", "in": "query", "required": true, "schema": {"type": "string", "title": "Event Type"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/articles/basic": {"get": {"tags": ["articles"], "summary": "Get Articles", "operationId": "articles-get_articles", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "description": "Search query for articles", "title": "Query"}, "description": "Search query for articles"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of articles to skip", "default": 0, "title": "Skip"}, "description": "Number of articles to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "exclusiveMinimum": 0, "description": "Maximum number of articles to return", "default": 20, "title": "Limit"}, "description": "Maximum number of articles to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArticleResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/articles/by_entity": {"get": {"tags": ["articles"], "summary": "Articles By Entity", "operationId": "articles-articles_by_entity", "parameters": [{"name": "entity", "in": "query", "required": true, "schema": {"type": "string", "description": "Entity for articles", "title": "Entity"}, "description": "Entity for articles"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of articles to skip", "default": 0, "title": "Skip"}, "description": "Number of articles to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "exclusiveMinimum": 0, "description": "Maximum number of articles to return", "default": 20, "title": "Limit"}, "description": "Maximum number of articles to return"}, {"name": "date", "in": "query", "required": false, "schema": {"type": "string", "description": "Date for articles", "title": "Date"}, "description": "Date for articles"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/ArticleResponse"}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/classification/location_from_query": {"get": {"tags": ["classification"], "summary": "Get Location From Query", "operationId": "classification-get_location_from_query", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "title": "Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/entities/": {"get": {"tags": ["entities"], "summary": "Search Entities", "description": "Search and paginate through entities based on a query.", "operationId": "entities-search_entities", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "description": "Search query for entities", "title": "Query"}, "description": "Search query for entities"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of records to skip", "default": 0, "title": "Skip"}, "description": "Number of records to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Maximum number of records to return", "default": 50, "title": "Limit"}, "description": "Maximum number of records to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/entities/by_entity": {"get": {"tags": ["entities"], "summary": "Get Entity Details", "description": "Retrieve detailed information about a specific entity.", "operationId": "entities-get_entity_details", "parameters": [{"name": "entity", "in": "query", "required": true, "schema": {"type": "string", "description": "Entity for details", "title": "Entity"}, "description": "Entity for details"}, {"name": "skip", "in": "query", "required": false, "schema": {"type": "integer", "minimum": 0, "description": "Number of records to skip", "default": 0, "title": "Skip"}, "description": "Number of records to skip"}, {"name": "limit", "in": "query", "required": false, "schema": {"type": "integer", "maximum": 100, "minimum": 1, "description": "Maximum number of records to return", "default": 50, "title": "Limit"}, "description": "Maximum number of records to return"}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/flows/report": {"post": {"tags": ["flows", "report"], "summary": "Report", "operationId": "flows-report", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "title": "Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/tasks/query_expansion": {"post": {"tags": ["tasks"], "summary": "Query Expansion", "operationId": "tasks-query_expansion", "parameters": [{"name": "query", "in": "query", "required": true, "schema": {"type": "string", "title": "Query"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/api/v2/scores/by_entity": {"get": {"tags": ["scores"], "summary": "Get Entity Scores In Timeframe", "operationId": "scores-get_entity_scores_in_timeframe", "parameters": [{"name": "entity", "in": "query", "required": true, "schema": {"type": "string", "title": "Entity"}}, {"name": "timeframe_from", "in": "query", "required": false, "schema": {"type": "string", "default": "2000-01-01", "title": "Timeframe From"}}, {"name": "timeframe_to", "in": "query", "required": false, "schema": {"type": "string", "default": "2025-01-28", "title": "Timeframe To"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {}}}}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}}, "components": {"schemas": {"ArticleResponse": {"properties": {"contents": {"items": {"type": "object"}, "type": "array", "title": "Contents"}}, "type": "object", "required": ["contents"], "title": "ArticleResponse"}, "Body_login-login_access_token": {"properties": {"grant_type": {"anyOf": [{"type": "string", "pattern": "password"}, {"type": "null"}], "title": "Grant Type"}, "username": {"type": "string", "title": "Username"}, "password": {"type": "string", "title": "Password"}, "scope": {"type": "string", "title": "Scope", "default": ""}, "client_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Id"}, "client_secret": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Client Secret"}}, "type": "object", "required": ["username", "password"], "title": "Body_login-login_access_token"}, "ClassificationSchemeCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"type": "string", "title": "Type"}, "expected_datatype": {"type": "string", "title": "Expected Datatype"}, "prompt": {"type": "string", "title": "Prompt"}, "input_text": {"type": "string", "title": "Input Text"}, "field_annotations": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Field Annotations"}, "model_annotations": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Annotations"}}, "type": "object", "required": ["name", "type", "expected_datatype", "prompt", "input_text"], "title": "ClassificationSchemeCreate"}, "ClassificationSchemeRead": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"type": "string", "title": "Type"}, "expected_datatype": {"type": "string", "title": "Expected Datatype"}, "prompt": {"type": "string", "title": "Prompt"}, "input_text": {"type": "string", "title": "Input Text"}, "field_annotations": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Field Annotations"}, "model_annotations": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Annotations"}, "id": {"type": "integer", "title": "Id"}, "workspace_id": {"type": "integer", "title": "Workspace Id"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["name", "type", "expected_datatype", "prompt", "input_text", "id", "workspace_id", "created_at", "updated_at"], "title": "ClassificationSchemeRead"}, "ClassificationSchemeUpdate": {"properties": {"name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Type"}, "expected_datatype": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Expected Datatype"}, "prompt": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Prompt"}, "input_text": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Input Text"}, "field_annotations": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Field Annotations"}, "model_annotations": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Model Annotations"}}, "type": "object", "title": "ClassificationSchemeUpdate"}, "HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "ItemCreate": {"properties": {"title": {"type": "string", "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}}, "type": "object", "required": ["title"], "title": "ItemCreate"}, "ItemOut": {"properties": {"title": {"type": "string", "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "id": {"type": "integer", "title": "Id"}, "owner_id": {"type": "integer", "title": "Owner Id"}}, "type": "object", "required": ["title", "id", "owner_id"], "title": "ItemOut"}, "ItemUpdate": {"properties": {"title": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Title"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}}, "type": "object", "title": "ItemUpdate"}, "ItemsOut": {"properties": {"data": {"items": {"$ref": "#/components/schemas/ItemOut"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "ItemsOut"}, "Message": {"properties": {"message": {"type": "string", "title": "Message"}}, "type": "object", "required": ["message"], "title": "Message"}, "MostRelevantEntitiesRequest": {"properties": {"article_ids": {"items": {"type": "string"}, "type": "array", "title": "Article Ids"}}, "type": "object", "required": ["article_ids"], "title": "MostRelevantEntitiesRequest"}, "NewPassword": {"properties": {"token": {"type": "string", "title": "Token"}, "new_password": {"type": "string", "title": "New Password"}}, "type": "object", "required": ["token", "new_password"], "title": "NewPassword"}, "QueryType": {"properties": {"type": {"type": "string", "title": "Type"}}, "type": "object", "required": ["type"], "title": "QueryType"}, "Request": {"properties": {"query": {"type": "string", "title": "Query"}, "query_type": {"$ref": "#/components/schemas/QueryType"}}, "type": "object", "required": ["query", "query_type"], "title": "Request", "description": "Request object for search synthesizer"}, "SearchHistoriesOut": {"properties": {"data": {"items": {"$ref": "#/components/schemas/SearchHistoryRead"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "SearchHistoriesOut"}, "SearchHistory": {"properties": {"query": {"type": "string", "title": "Query"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "id": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Id"}, "user_id": {"type": "integer", "title": "User Id"}}, "type": "object", "required": ["query", "user_id"], "title": "SearchHistory"}, "SearchHistoryCreate": {"properties": {"query": {"type": "string", "title": "Query"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}}, "type": "object", "required": ["query"], "title": "SearchHistoryCreate"}, "SearchHistoryRead": {"properties": {"query": {"type": "string", "title": "Query"}, "timestamp": {"type": "string", "format": "date-time", "title": "Timestamp"}, "id": {"type": "integer", "title": "Id"}, "user_id": {"type": "integer", "title": "User Id"}}, "type": "object", "required": ["query", "id", "user_id"], "title": "SearchHistoryRead"}, "SearchType": {"type": "string", "enum": ["text", "semantic", "structured"], "title": "SearchType"}, "Token": {"properties": {"access_token": {"type": "string", "title": "Access Token"}, "token_type": {"type": "string", "title": "Token Type", "default": "bearer"}}, "type": "object", "required": ["access_token"], "title": "Token"}, "UpdatePassword": {"properties": {"current_password": {"type": "string", "title": "Current Password"}, "new_password": {"type": "string", "title": "New Password"}}, "type": "object", "required": ["current_password", "new_password"], "title": "UpdatePassword"}, "UserCreate": {"properties": {"email": {"type": "string", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}, "password": {"type": "string", "title": "Password"}}, "type": "object", "required": ["email", "password"], "title": "UserCreate"}, "UserCreateOpen": {"properties": {"email": {"type": "string", "title": "Email"}, "password": {"type": "string", "title": "Password"}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}}, "type": "object", "required": ["email", "password"], "title": "UserCreateOpen"}, "UserOut": {"properties": {"email": {"type": "string", "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}, "id": {"type": "integer", "title": "Id"}}, "type": "object", "required": ["email", "id"], "title": "UserOut"}, "UserUpdate": {"properties": {"email": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Email"}, "is_active": {"type": "boolean", "title": "Is Active", "default": true}, "is_superuser": {"type": "boolean", "title": "Is Superuser", "default": false}, "full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}, "password": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Password"}}, "type": "object", "title": "UserUpdate"}, "UserUpdateMe": {"properties": {"full_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Full Name"}, "email": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Email"}}, "type": "object", "title": "UserUpdateMe"}, "UsersOut": {"properties": {"data": {"items": {"$ref": "#/components/schemas/UserOut"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "UsersOut"}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}, "WorkspaceCreate": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "sources": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Sources"}}, "type": "object", "required": ["name"], "title": "WorkspaceCreate"}, "WorkspaceRead": {"properties": {"name": {"type": "string", "title": "Name"}, "description": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Description"}, "sources": {"anyOf": [{"items": {"type": "string"}, "type": "array"}, {"type": "null"}], "title": "Sources"}, "uid": {"type": "integer", "title": "Uid"}, "user_id_ownership": {"type": "integer", "title": "User Id Ownership"}, "created_at": {"type": "string", "format": "date-time", "title": "Created At"}, "updated_at": {"type": "string", "format": "date-time", "title": "Updated At"}}, "type": "object", "required": ["name", "uid", "user_id_ownership", "created_at", "updated_at"], "title": "WorkspaceRead"}, "WorkspacesOut": {"properties": {"data": {"items": {"$ref": "#/components/schemas/WorkspaceRead"}, "type": "array", "title": "Data"}, "count": {"type": "integer", "title": "Count"}}, "type": "object", "required": ["data", "count"], "title": "WorkspacesOut"}}, "securitySchemes": {"OAuth2PasswordBearer": {"type": "oauth2", "flows": {"password": {"scopes": {}, "tokenUrl": "/api/v1/login/access-token"}}}}}}